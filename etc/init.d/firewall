#! /bin/sh
# /etc/init.d/firewall: start firewalling.
export PYENV_VERSION=3.7.7
SRCDIR=`grep 'SRCDIR' /etc/mailcleaner.conf | cut -d ' ' -f3`
if [ "SRCDIR" = "" ]; then
  SRCDIR=/opt/mailcleaner
fi
VARDIR=`grep 'VARDIR' /etc/mailcleaner.conf | cut -d ' ' -f3`
if [ "VARDIR" = "" ]; then
  VARDIR=/var/mailcleaner
fi

LOCKFILE=/tmp/fw.lock
prepare () {
  $SRCDIR/bin/dump_firewall.pl >/dev/null 2>&1
}
 
case "$1" in
  start)
    touch $VARDIR/run/firewall.start.rs
    echo -n "  Starting firewall: "
    prepare
    $SRCDIR/etc/firewall/start >/dev/null 2>&1
    echo "1" > $LOCKFILE
    echo -n "started."
    echo "."
    if [ -f $VARDIR/run/firewall.rn ]; then
      rm $VARDIR/run/firewall.rn
    fi
    rm $VARDIR/run/firewall.stopped >/dev/null 2>&1
    rm $VARDIR/run/firewall.*.rs >/dev/null 2>&1
    export PYENV_ROOT="/var/mailcleaner/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    if command -v pyenv 1>/dev/null 2>&1; then
      eval "$(pyenv init -)"
    fi
    fail2ban.py internal reload-fw firewall
    ;;
  stop)
    touch $VARDIR/run/firewall.stop.rs
    echo -n "  Stopping firewall: "
    $SRCDIR/etc/firewall/stop >/dev/null 2>&1
    if [ -f $LOCKFILE ]; then
      rm $LOCKFILE
    fi;
    echo "stopped."
    rm $VARDIR/run/firewall.stop.rs >/dev/null 2>&1
    touch $VARDIR/run/firewall.stopped
    ;;
  restart)
    touch $VARDIR/run/firewall.restart.rs
  echo restarting...
    $0 stop
    sleep 2
    $0 start
		;;
  *)
    echo "Usage: /etc/init.d/firewall {start|stop}"
    exit 1
esac

exit 0
