<?php

/**
 * @license http://www.mailcleaner.net/open/licence_en.html Mailcleaner Public License
 * @package mailcleaner
 * @author Olivier Diserens, John Mertz
 * @copyright 2009, Olivier Diserens; 2023, John Mertz
 *
 * Email address form
 */

class Default_Form_Manage_EmailAddresssettings extends Zend_Form
{
    protected $_email;
    protected $_panelname = 'addresssettings';

    public function __construct($email)
    {
        $this->_email = $email;

        parent::__construct();
    }


    public function init()
    {
        $this->setMethod('post');

        $t = Zend_Registry::get('translate');

        $this->setAttrib('id', 'email_form');
        $panellist = new Zend_Form_Element_Select('emailpanel', [
            'required'   => false,
            'filters'    => ['StringTrim']
        ]);
        ## TODO: add specific validator
        $panellist->addValidator(new Zend_Validate_Alnum());

        foreach ($this->_email->getConfigPanels() as $panel => $panelname) {
            $panellist->addMultiOption($panel, $panelname);
        }
        $panellist->setValue($this->_panelname);
        $this->addElement($panellist);

        $panel = new Zend_Form_Element_Hidden('panel');
        $panel->setValue($this->_panelname);
        $this->addElement($panel);
        $name = new Zend_Form_Element_Hidden('address');
        $name->setValue($this->_email->getParam('address'));
        $this->addElement($name);


        $action = new Zend_Form_Element_Select('delivery_type', [
            'required'   => true,
            'label'      => $t->_('For each message detected as spam') . " : ",
            'filters'    => ['StringTrim']
        ]);

        $action->addMultiOption('3', $t->_('immediately delete (drop mode)'));
        $action->addMultiOption('1', $t->_('deliver with subject keyword (tag mode)'));
        $action->addMultiOption('2', $t->_('retain in quarantine (quarantine mode)'));
        if ($this->_email->getPref('delivery_type') == 'NOTSET') {
            $action->setValue($this->_email->getDomainObject()->getPref('delivery_type'));
        } else {
            $action->setValue($this->_email->getPref('delivery_type'));
        }
        $this->addElement($action);

        $tag = new  Zend_Form_Element_Text('spam_tag', [
            'label'   => $t->_('Subject keyword') . " :",
            'title' => $t->_('The value will be added in each mail subject detected as SPAM'),
            'required' => false,
            'filters'    => ['StringTrim']
        ]);
        if ($this->_email->getPref('spam_tag') == 'NOTSET') {
            $tag->setValue($this->_email->getDomainObject()->getPref('spam_tag'));
        } else {
            $tag->setValue($this->_email->getPref('spam_tag'));
        }
        $this->addElement($tag);


        $blockbounces = new Zend_Form_Element_Checkbox('quarantine_bounces', [
            'label'   => $t->_('Retain error messages') . " :",
            'title'   => $t->_('If you check the option Retain error messages, all automated notifications generated by the mail servers of your e-mail recipients will be quarantined'),
            'uncheckedValue' => "0",
            'checkedValue' => "1"
        ]);
        $blockbounces->setValue($this->_email->getPref('quarantine_bounces'));
        $this->addElement($blockbounces);

        $bypassfiltering = new Zend_Form_Element_Checkbox('bypass_filtering', [
            'label'   => $t->_('Bypass all filtering for this address') . " :",
            'title' => $t->_('Disable antispam control for this address'),
            'uncheckedValue' => "0",
            'checkedValue' => "1"
        ]);
        $bypassfiltering->setValue($this->_email->getPref('bypass_filtering'));
        $this->addElement($bypassfiltering);

        $frequency = new Zend_Form_Element_Select('frequency', [
            'required'   => true,
            'label'      => $t->_('Frequency of quarantine reports') . " : ",
            'filters'    => ['StringTrim']
        ]);

        $frequency->addMultiOption('daily', $t->_('Daily'));
        $frequency->addMultiOption('weekly', $t->_('Weekly'));
        $frequency->addMultiOption('monthly', $t->_('Monthly'));
        $frequency->addMultiOption('none', $t->_('No Report'));
        $frequency->setValue($this->_email->getSummaryFrequency());
        $this->addElement($frequency);

        $type = new Zend_Form_Element_Select('summary_type', [
            'required'   => true,
            'label'      => $t->_('Format of quarantine reports') . " : ",
            'filters'    => ['StringTrim']
        ]);

        $type->addMultiOption('text', $t->_('Plain text'));
        $type->addMultiOption('html', $t->_('HTML'));
        $type->addMultiOption('digest', $t->_('Digest'));
        $this->addElement($type);
        if ($this->_email->getPref('summary_type') == 'NOTSET') {
            $type->setValue($this->_email->getDomainObject()->getPref('summary_type'));
        } else {
            $type->setValue($this->_email->getPref('summary_type'));
        }

        $summary_to = new  Zend_Form_Element_Text('summary_to', [
            'label'   => $t->_('Send summary to') . " :",
            'required' => false,
            'size' => 40,
            'filters'    => ['StringTrim']
        ]);
        $summary_to->setValue($this->_email->getPref('summary_to'));
        $summary_to->addValidator(new Zend_Validate_EmailAddress());
        $this->addElement($summary_to);

        $submit = new Zend_Form_Element_Submit('submit', [
            'label'    => $t->_('Submit')
        ]);
        $this->addElement($submit);
    }

    public function setParams($request, $email)
    {
        $email->setPref('quarantine_bounces', '0');
        $email->setPref('bypass_filtering', '0');
        foreach (['delivery_type', 'quarantine_bounces', 'bypass_filtering', 'summary_type'] as $pref) {
            if ($request->getParam($pref)) {
                $email->setPref($pref, $request->getParam($pref));
            }
        }
        $email->setPref('spam_tag', $request->getParam('spam_tag'));
        $email->setPref('summary_to', $request->getParam('summary_to'));
        $email->setSummaryFrequency($request->getParam('frequency'));
        return true;
    }
}
